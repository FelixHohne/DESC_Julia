1. Create a new conda environment (i.e. `conda create --name desc_jl python=3.9`)
2. Activate the conda environment (`conda activate desc_jl`)
3. Check to see which version of CUDA is supported on your GPU, if applicable (i.e. via `nvidia-smi`). 
4. Run the following command based on the CUDA version, or 
    cpu if no GPU is available: (i.e. `bash install/install.sh cuda12`). Currently, {cuda12, cuda11, cpu} are supported. 
5. From the DESC home directory, initialize the julia pkg package environment. It should show (DESC) pkg>


Note: It doesn't seem the standard pip installers actually work properly for JAX. When I try to detect backend, 
it only states CPU. 

Installing JAX with pip actually removes the GPU installation and replaces it with a CPU-based installation. 

try_5 currently has a working GPU-accelerated version of Jax. 

We can run the following commands to actually call functions: 
1. using PkgForML
2. PkgForML.greet()

We need to run `add Pkg` to actually add Pkg so that inside the Pkg environment we have access to the ability to add PyCall

As of April 2nd, Numba does not support Python 3.11. 